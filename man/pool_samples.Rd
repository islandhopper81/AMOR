% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pool_samples.r
\name{pool_samples}
\alias{pool_samples}
\alias{pool_samples.default}
\alias{pool_samples.Dataset}
\title{Pool samples}
\usage{
pool_samples(x, ...)

\method{pool_samples}{default}(x, groups, FUN = sum)

\method{pool_samples}{Dataset}(x, groups, FUN = sum)
}
\arguments{
\item{x}{Either a numerical matrix or a Dataset object. For a numerical
matrix, samples are given as columns and taxa as rows.}

\item{groups}{For the default method this is a vector or factor 
specifying to which group each sample belongs. Vectors will be converted to
a factors with the \code{factor} function. It must be of the same length
as \code{ncol(x)}. For the Dataset method, this is a single character string or
numeric value indicating the column from x$Map to be used as a grouping factor.}

\item{FUN}{Function to apply when collapsing the data. Defaults to \code{sum},
which is ideal for count data. For proportioanl data \code{mean} or \code{median}
might be more appropriate. Any function that takes a vector of numbers and returns
a single numeric value can be used.}
}
\value{
The default method returns a \code{matrix} object.

The Dataset method returns a \code{Dataset} object when Dat includes a Tax element
(see \code{create_dataset}); when the Tax element is missing it returns a
\code{matrix} object.
}
\description{
Pools abundances from samples according to a grouping factor.
}
\details{
Wrapper for \code{collapse_matrix}. This function is useful to calculate
per-group summary statistics per taxon.

The default method takes an abundance matrix and a grouping factor,
then applies the aggregating function FUN to the groups of samples
defined by the grouping factor.

The Dataset method takes a Dataset object and obtains the grouping factor
from the Map element.
}
\examples{
library(AMOR)
data(Rhizo)
data(Rhizo.map)
data(Rhizo.tax)
Dat <- create_dataset(Rhizo,Rhizo.map,Rhizo.tax)

# The following returns a numeric matrix
Collapsed1 <- pool_samples(x = Dat$Tab,groups = Dat$Map$fraction)

# The following returns a Dataset
Collapsed2 <- pool_samples(x = Dat,groups = "fraction")

# A way to calculate the overall counts per taxa
res <- pool_samples(Dat$Tab, groups = rep("all", length.out = ncol(Rhizo)))
}
\author{
Sur Herrera Paredes
}
